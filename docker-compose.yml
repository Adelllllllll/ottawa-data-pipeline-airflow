x-airflow-common:
  &airflow-common
  image: apache/airflow:${AIRFLOW_IMAGE_TAG:-2.9.3}
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__LOAD_EXAMPLES=${AIRFLOW__CORE__LOAD_EXAMPLES:-False}
    - AIRFLOW__WEBSERVER__RBAC=True
    - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW__CORE__FERNET_KEY}
    - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    - _PIP_ADDITIONAL_REQUIREMENTS=-r /opt/airflow/requirements.txt
    # --- Added MongoDB environment variables ---
    - MONGO_HOST=${MONGO_HOST:-mongo}
    - MONGO_PORT=${MONGO_PORT:-27017}
    - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:-ottawa}
    - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-root}
    - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-example}

  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./src:/opt/airflow/src
    - ./data:/opt/airflow/data
    - ./requirements.txt:/opt/airflow/requirements.txt
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-0}"
  depends_on:
    - mysql
    - mongo
    - elasticsearch
    - localstack

services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 5


  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "${AIRFLOW_WEB_PORT:-8080}:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-airflow}
      - MYSQL_USER=${MYSQL_USER:-airflow}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-airflow}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password

  mongo:
    image: mongo:6.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-root}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-example}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:-ottawa}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - ./data/mongo:/data/db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    environment:
      - discovery.type=single-node
      - cluster.name=${ES_CLUSTER_NAME:-es-local}
      - ES_JAVA_OPTS=${ES_JAVA_OPTS:--Xms512m -Xmx512m}
    ports:
      - "${ES_HTTP_PORT:-9200}:9200"
      - "${ES_TCP_PORT:-9300}:9300"
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data

  localstack:
    image: localstack/localstack:latest
    environment:
      - SERVICES=${LOCALSTACK_SERVICES:-s3}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-test}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-test}
      - DEBUG=1
    ports:
      - "${LOCALSTACK_PORT:-4566}:4566"
    #volumes:
    # - "./.docker/localstack:/var/lib/localstack"
    #tmpfs:
    #  - /tmp/localstack

volumes:
  mysql:
  mongo:
  elasticsearch:
  postgres:
